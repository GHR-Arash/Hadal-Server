service: your-service-name

custom:
  webpack:
    keepOutputDirectory: false
  localstack:
    debug: true
    networks: # optional - attaches the list of networks to the localstack docker container after startup
      - host
      - overlay
      - central_auth_dev
    stages:
      - local
    host: http://localhost
    edgePort: 4566
    autostart: false  # Optional - if you want to start localstack with a serverless command
    lambda:
      mountCode: false
  scriptHooks:
    #before:package:initialize: scripts/setEnv.js
    after:deploy:deploy: seedDynamoDB.bat
    #after:deploy:deploy: ./seedDynamoDB.sh

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  environment:
    JWT_SECRET: your-jwt-secret # Store this securely, consider using AWS Secrets Manager or SSM Parameter Store
    RUNNING_ON_LOCALSTACK: true
    SQS_QUEUE_URL:
      Ref: TaskQueue  # This is assuming TaskQueue is the logical ID of your SQS queue in the CloudFormation resources section




functions:
  app:
    handler: src/index.handler
    timeout: 30 # Timeout in seconds
    memorySize: 912 # Memory size in MB
    events:
      - http:
          path: /
          method: ANY
          cors: true
          integration: LAMBDA_PROXY
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
          integration: LAMBDA_PROXY
  processQueue:
    handler: src/handlers/handlers.processTaskQueue
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - TaskQueue
              - Arn
          batchSize: 5

resources:
  Resources:
    TaskQueue:
      Type: AWS::SQS::Queue

    TasksDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Tasks
        AttributeDefinitions:
          - AttributeName: taskId
            AttributeType: S
          - AttributeName: externalId
            AttributeType: S
        KeySchema:
          - AttributeName: taskId
            KeyType: HASH
          - AttributeName: externalId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    WorkspacesDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Workspaces
        AttributeDefinitions:
          - AttributeName: apiAccessKey
            AttributeType: S
        KeySchema:
          - AttributeName: apiAccessKey
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    SmartContractDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: SmartContracts
        AttributeDefinitions:
          - AttributeName: workspaceId
            AttributeType: S
          - AttributeName: Address
            AttributeType: S
        KeySchema:
          - AttributeName: workspaceId
            KeyType: HASH
          - AttributeName: Address
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-scriptable-plugin
  - serverless-webpack
  - serverless-localstack

